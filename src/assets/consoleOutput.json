{
  "status": 200,
  "statusText": "OK",
  "headers": {
    "date": "Thu, 10 Aug 2023 15:35:11 GMT",
    "content-type": "application/json",
    "transfer-encoding": "chunked",
    "connection": "keep-alive",
    "access-control-allow-origin": "*",
    "cache-control": "no-cache, must-revalidate",
    "openai-model": "gpt-3.5-turbo-0613",
    "openai-organization": "user-iv8x2pye6cmrc8cynfmldawm",
    "openai-processing-ms": "69740",
    "openai-version": "2020-10-01",
    "strict-transport-security": "max-age=15724800; includeSubDomains",
    "x-ratelimit-limit-requests": "3500",
    "x-ratelimit-limit-tokens": "90000",
    "x-ratelimit-remaining-requests": "3499",
    "x-ratelimit-remaining-tokens": "86232",
    "x-ratelimit-reset-requests": "17ms",
    "x-ratelimit-reset-tokens": "2.512s",
    "x-request-id": "ec5b20c1d03c3c65316fc67a48d1ca27",
    "cf-cache-status": "DYNAMIC",
    "server": "cloudflare",
    "cf-ray": "7f494cf33cbd006d-CDG",
    "alt-svc": "h3=\":443\"; ma=86400"
  },
  "config": {
    "transitional": {
      "silentJSONParsing": true,
      "forcedJSONParsing": true,
      "clarifyTimeoutError": false
    },
    "transformRequest": [null],
    "transformResponse": [null],
    "timeout": 0,
    "xsrfCookieName": "XSRF-TOKEN",
    "xsrfHeaderName": "X-XSRF-TOKEN",
    "maxContentLength": -1,
    "maxBodyLength": -1,
    "headers": {
      "Accept": "application/json, text/plain, */*",
      "Content-Type": "application/json",
      "User-Agent": "OpenAI/NodeJS/3.3.0",
      "Authorization": "Bearer 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",
      "Content-Length": 6388
    },
    "method": "post",
    "data": "{\"model\":\"gpt-3.5-turbo\",\"messages\":[{\"role\":\"system\",\"content\":\"**Context**: You and I are collaborating as scientists trying to decipher the importance of different universal human needs held by individuals based on their described experiences. You are the top expert in the field of psychology concerning human needs.\\n\\n**Instructions**:\\n1. You will be provided with descriptions of life experiences shared by an individual, termed \\\"Moments\\\". These moments will usually reflect the satisfaction or dissatisfaction of certain human needs.\\n2. Rate the importance each need of the list of universal human needs (provided below) is likely holding for the individual based on that moment. Ratings should range from 0.0 (not important at all) to 1.0 (very important). 0.5 indicates moderate importance.\\nNotes: Both the satisfaction and dissatisfaction of a need can indicate its importance.  Also, a moment might hint at a need's importance even if the need is not explicitly stated.\\n3. Provide your result in a JSON format structured as shown in the example below, but only list needs with non-zero importance.\\n\\n**Universal Human Needs**:\\n``` \\n[\\n  \\\"Personal Safety 🛡️\\\",\\n  \\\"Financial Security 💰\\\",\\n  \\\"Food 🥦\\\",\\n  \\\"Shelter 🏠\\\",\\n  \\\"Physical Movement 🤸\\\",\\n  \\\"Comfort 🛋️\\\",\\n  \\\"Rest & Relaxation 🧘\\\",\\n  \\\"Physical touch 👐\\\",\\n  \\\"Sexual Expression ❤️‍🔥\\\",\\n  \\\"Contact with nature 🏞️\\\",\\n  \\\"Social Connection 🤝\\\",\\n  \\\"Belongingness & Community 🏘️\\\",\\n  \\\"Empathy, Understanding & Validation 🫂\\\",\\n  \\\"Affection, Love & Intimacy ❤️\\\",\\n  \\\"Interpersonal Communication 📢\\\",\\n  \\\"Emotional Safety 🤗\\\",\\n  \\\"Self-Esteem & Confidence 💪\\\",\\n  \\\"Social Recognition 👏\\\",\\n  \\\"Competence 🎓\\\",\\n  \\\"Efficiency ⚡\\\",\\n  \\\"Personal Achievement 🥇\\\",\\n  \\\"Striving for Perfection 💎\\\",\\n  \\\"Personal Autonomy 🛤️\\\",\\n  \\\"Personal Privacy 🌐\\\",\\n  \\\"Societal Contribution 🔨\\\",\\n  \\\"Personal Expression 🗣️\\\",\\n  \\\"Creativity 🎨\\\",\\n  \\\"Exploration 🌎\\\",\\n  \\\"Challenge 🧗\\\",\\n  \\\"Novelty 🌀\\\",\\n  \\\"Entertainment 🎠\\\",\\n  \\\"Humor 😂\\\",\\n  \\\"Play ⚽\\\",\\n  \\\"Inspiration💡\\\",\\n  \\\"Self-Actualization 🌱\\\",\\n  \\\"Learning 📚\\\",\\n  \\\"Moral Integrity 💯\\\",\\n  \\\"Social Justice ⚖️\\\",\\n  \\\"Life's Meaning 🌌\\\",\\n  \\\"Purposeful Living 🎯\\\",\\n  \\\"Inner Peace 🕊️\\\",\\n  \\\"Spirituality 🙏\\\",\\n  \\\"Sense of Wonder & Wholeness 🌈\\\",\\n  \\\"Order & Structure 📐\\\",\\n  \\\"Altruism ❤️‍🩹\\\",\\n  \\\"Joyful Celebration 🎉\\\",\\n  \\\"Grieving & Mourning ⚫️\\\"\\n]\\n```\\n\\n**Expected JSON Format**:\\n```\\nresult= [\\n {\\\"moment\\\": \\\"insert moment\\\", \\\"needs_importance\\\": {\\\"insert need\\\":  insert need_importance,    ... }},\\n ...\\n]\\n```\\n\\n\\n**Example**:\\nFor the Moment:\\n```\\n{\\n  \\\"moment\\\": \\\"Feeling like I am wasting my time at the playfight workshop because I'm not learning anything\\\"\\n}\\n```\\nYou would assess for each need whether the moment is referring to the satisfaction or dissatisfaction of it, or if it somehow pertains to it.\\n\\nIt would go like:\\n- \\\"Personal Safety 🛡️\\\": not related at all. need_importance: 0.0. \\n... and so on ...\\n- \\\"Physical Movement 🤸\\\": indirectly related since playfight is an activity involving movement so the user must attach importance to this need otherwise he wouldn't practice playfight at all. need_importance: 0.5.\\n- \\\"Physical Touch 👐\\\": indirectly related since playfight is an activity involving touch so the user must attach importance to this need otherwise he wouldn't practice playfight at all. need_importance: 0.3.\\n- \\\"Sexual Expression ❤️‍🔥\\\": indirectly related since playfight and sexual expression share a lot of traits like play, creativity, physical touch, etc... need_importance: 0.1. \\n- \\\"Social Connection 🤝\\\": indirectly related since playfight is an activity involving social connections so the user must attach importance to this need otherwise he wouldn't practice playfight at all. need_importance: 0.5.\\n... and so on ...\\n-  \\\"Efficiency ⚡\\\": directly related since the user is  reporting a high dissatisfaction caused by \\\"not learning anything\\\" so the user must have a high need for efficiency need_importance: 0.7.\\n... and so on ...\\n\\\"Learning 📚\\\": directly related since the user is  reporting a high dissatisfaction caused by \\\"not learning anything\\\" so the user must have a need for learning that is somewhat important. need_importance: 0.9\\n... and so on ...\\n\\nResulting JSON (keeping only needs with a non-zero importance):\\n```\\nresult: [\\n  {\\n    \\\"moment\\\": \\\"Feeling like I am wasting my time at the playfight workshop because I'm not learning anything\\\",\\n    \\\"needs_importance\\\": {\\n      \\\"Physical Movement 🤸\\\": 0.5,\\n      \\\"Physical Touch 👐\\\": 0.3,\\n      \\\"Sexual Expression ❤️‍🔥\\\": 0.1,\\n      \\\"Social Connection 🤝\\\": 0.5,\\n        \\\"Belongingness & Community 🏘️\\\": 0.1,\\n      \\\"Interpersonal Communication 📢\\\": 0.2,\\n      \\\"Competence 🎓\\\": 0.2,\\n      \\\"Efficiency ⚡\\\": 0.7,\\n      \\\"Personal Achievement 🥇\\\": 0.2,\\n      \\\"Striving For Perfection 💎\\\": 0.2,\\n      \\\"Personal Autonomy 🛤️\\\": 0.2,\\n      \\\"Personal Expression 🗣️\\\": 0.3,\\n      \\\"Creativity 🎨\\\": 0.4,\\n      \\\"Exploration 🌎\\\": 0.3,\\n      \\\"Challenge 🧗\\\": 0.2,\\n      \\\"Novelty 🌀\\\": 0.4,\\n      \\\"Play ⚽\\\": 0.5,\\n      \\\"Self-Actualization 🌱\\\": 0.2,\\n      \\\"Learning 📚\\\": 0.9,\\n    }\\n  }\\n]\\n}\\n```\"},{\"role\":\"user\",\"content\":\"[\\n    {\\n        \\\"moment\\\": \\\"Felt so bad when running after eating spinach\\\"\\n    },\\n    {\\n        \\\"moment\\\": \\\"Feeling excited when calling mum\\\"\\n    },\\n    {\\n        \\\"moment\\\": \\\"Feeling both empty and full after movement class\\\"\\n    },\\n    {\\n        \\\"moment\\\": \\\"Feeling so stressed out today when woking up\\\"\\n    },\\n    {\\n        \\\"moment\\\": \\\"Feeling grateful toward life when eating my fresh tomatoes\\\"\\n    },\\n    {\\n        \\\"moment\\\": \\\"Feeling a little down today after calling mum\\\"\\n    },\\n    {\\n        \\\"moment\\\": \\\"Feeling proud of myself for working out today!\\\"\\n    },\\n    {\\n        \\\"moment\\\": \\\"Feeling moody bec. of the grey weather\\\"\\n    },\\n    {\\n        \\\"moment\\\": \\\"Sex with mona, good connection and sharing\\\"\\n    }\\n]\"}],\"temperature\":0.25,\"max_tokens\":2304,\"top_p\":1,\"frequency_penalty\":0,\"presence_penalty\":0}",
    "url": "https://api.openai.com/v1/chat/completions"
  },
  "request": {
    "_events": {},
    "_eventsCount": 7,
    "outputData": [],
    "outputSize": 0,
    "writable": true,
    "destroyed": true,
    "_last": false,
    "chunkedEncoding": false,
    "shouldKeepAlive": true,
    "maxRequestsOnConnectionReached": false,
    "_defaultKeepAlive": true,
    "useChunkedEncodingByDefault": true,
    "sendDate": false,
    "_removedConnection": false,
    "_removedContLen": false,
    "_removedTE": false,
    "strictContentLength": false,
    "_contentLength": 6388,
    "_hasBody": true,
    "_trailer": "",
    "finished": true,
    "_headerSent": true,
    "_closed": true,
    "socket": {
      "_tlsOptions": {
        "pipe": false,
        "secureContext": {
          "context": {}
        },
        "isServer": false,
        "requestCert": true,
        "rejectUnauthorized": true
      },
      "_secureEstablished": true,
      "_securePending": false,
      "_newSessionPending": false,
      "_controlReleased": true,
      "secureConnecting": false,
      "_SNICallback": null,
      "servername": "api.openai.com",
      "alpnProtocol": false,
      "authorized": true,
      "authorizationError": null,
      "encrypted": true,
      "_events": {
        "close": [null, null, null]
      },
      "_eventsCount": 9,
      "connecting": false,
      "_hadError": false,
      "_parent": null,
      "_host": "api.openai.com",
      "_closeAfterHandlingError": false,
      "_readableState": {
        "objectMode": false,
        "highWaterMark": 16384,
        "buffer": {
          "head": null,
          "tail": null,
          "length": 0
        },
        "length": 0,
        "pipes": [],
        "flowing": true,
        "ended": false,
        "endEmitted": false,
        "reading": true,
        "constructed": true,
        "sync": false,
        "needReadable": true,
        "emittedReadable": false,
        "readableListening": false,
        "resumeScheduled": false,
        "errorEmitted": false,
        "emitClose": false,
        "autoDestroy": true,
        "destroyed": false,
        "errored": null,
        "closed": false,
        "closeEmitted": false,
        "defaultEncoding": "utf8",
        "awaitDrainWriters": null,
        "multiAwaitDrain": false,
        "readingMore": false,
        "dataEmitted": true,
        "decoder": null,
        "encoding": null
      },
      "_writableState": {
        "objectMode": false,
        "highWaterMark": 16384,
        "finalCalled": false,
        "needDrain": false,
        "ending": false,
        "ended": false,
        "finished": false,
        "destroyed": false,
        "decodeStrings": false,
        "defaultEncoding": "utf8",
        "length": 0,
        "writing": false,
        "corked": 0,
        "sync": false,
        "bufferProcessing": false,
        "writecb": null,
        "writelen": 0,
        "afterWriteTickInfo": null,
        "buffered": [],
        "bufferedIndex": 0,
        "allBuffers": true,
        "allNoop": true,
        "pendingcb": 0,
        "constructed": true,
        "prefinished": false,
        "errorEmitted": false,
        "emitClose": false,
        "autoDestroy": true,
        "errored": null,
        "closed": false,
        "closeEmitted": false
      },
      "allowHalfOpen": false,
      "_sockname": null,
      "_pendingData": null,
      "_pendingEncoding": "",
      "_server": null,
      "ssl": {
        "_parent": {
          "reading": true,
          "onconnection": null
        },
        "reading": true
      },
      "_requestCert": true,
      "_rejectUnauthorized": true,
      "timeout": 5000,
      "parser": null,
      "_httpMessage": null
    },
    "_header": "POST /v1/chat/completions HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nUser-Agent: OpenAI/NodeJS/3.3.0\r\nAuthorization: Bearer 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\r\nContent-Length: 6388\r\nHost: api.openai.com\r\nConnection: keep-alive\r\n\r\n",
    "_keepAliveTimeout": 0,
    "agent": {
      "_events": {},
      "_eventsCount": 2,
      "defaultPort": 443,
      "protocol": "https:",
      "options": {
        "keepAlive": true,
        "scheduling": "lifo",
        "timeout": 5000,
        "noDelay": true,
        "path": null
      },
      "requests": {},
      "sockets": {},
      "freeSockets": {
        "api.openai.com:443:::::::::::::::::::::": [
          {
            "_tlsOptions": {
              "pipe": false,
              "secureContext": {
                "context": {}
              },
              "isServer": false,
              "requestCert": true,
              "rejectUnauthorized": true
            },
            "_secureEstablished": true,
            "_securePending": false,
            "_newSessionPending": false,
            "_controlReleased": true,
            "secureConnecting": false,
            "_SNICallback": null,
            "servername": "api.openai.com",
            "alpnProtocol": false,
            "authorized": true,
            "authorizationError": null,
            "encrypted": true,
            "_events": {
              "close": [null, null, null]
            },
            "_eventsCount": 9,
            "connecting": false,
            "_hadError": false,
            "_parent": null,
            "_host": "api.openai.com",
            "_closeAfterHandlingError": false,
            "_readableState": {
              "objectMode": false,
              "highWaterMark": 16384,
              "buffer": {
                "head": null,
                "tail": null,
                "length": 0
              },
              "length": 0,
              "pipes": [],
              "flowing": true,
              "ended": false,
              "endEmitted": false,
              "reading": true,
              "constructed": true,
              "sync": false,
              "needReadable": true,
              "emittedReadable": false,
              "readableListening": false,
              "resumeScheduled": false,
              "errorEmitted": false,
              "emitClose": false,
              "autoDestroy": true,
              "destroyed": false,
              "errored": null,
              "closed": false,
              "closeEmitted": false,
              "defaultEncoding": "utf8",
              "awaitDrainWriters": null,
              "multiAwaitDrain": false,
              "readingMore": false,
              "dataEmitted": true,
              "decoder": null,
              "encoding": null
            },
            "_writableState": {
              "objectMode": false,
              "highWaterMark": 16384,
              "finalCalled": false,
              "needDrain": false,
              "ending": false,
              "ended": false,
              "finished": false,
              "destroyed": false,
              "decodeStrings": false,
              "defaultEncoding": "utf8",
              "length": 0,
              "writing": false,
              "corked": 0,
              "sync": false,
              "bufferProcessing": false,
              "writecb": null,
              "writelen": 0,
              "afterWriteTickInfo": null,
              "buffered": [],
              "bufferedIndex": 0,
              "allBuffers": true,
              "allNoop": true,
              "pendingcb": 0,
              "constructed": true,
              "prefinished": false,
              "errorEmitted": false,
              "emitClose": false,
              "autoDestroy": true,
              "errored": null,
              "closed": false,
              "closeEmitted": false
            },
            "allowHalfOpen": false,
            "_sockname": null,
            "_pendingData": null,
            "_pendingEncoding": "",
            "_server": null,
            "ssl": {
              "_parent": {
                "reading": true,
                "onconnection": null
              },
              "reading": true
            },
            "_requestCert": true,
            "_rejectUnauthorized": true,
            "timeout": 5000,
            "parser": null,
            "_httpMessage": null
          },
          null
        ]
      },
      "keepAliveMsecs": 1000,
      "keepAlive": true,
      "maxSockets": null,
      "maxFreeSockets": 256,
      "scheduling": "lifo",
      "maxTotalSockets": null,
      "totalSocketCount": 2,
      "maxCachedSessions": 100,
      "_sessionCache": {
        "map": {
          "api.openai.com:443:::::::::::::::::::::": {
            "type": "Buffer",
            "data": [
              48, 130, 6, 141, 2, 1, 1, 2, 2, 3, 4, 4, 2, 19, 2, 4, 32, 96, 159,
              210, 218, 90, 182, 175, 110, 197, 81, 86, 123, 223, 171, 155, 91,
              155, 178, 48, 104, 151, 176, 142, 144, 188, 60, 229, 236, 139,
              128, 184, 97, 4, 48, 76, 203, 148, 107, 182, 144, 146, 212, 33,
              239, 68, 27, 39, 44, 249, 157, 216, 3, 130, 225, 185, 47, 168, 69,
              98, 210, 21, 154, 199, 149, 22, 210, 180, 196, 39, 82, 108, 87,
              167, 94, 214, 0, 156, 138, 96, 120, 108, 6, 161, 6, 2, 4, 100,
              213, 3, 175, 162, 4, 2, 2, 28, 32, 163, 130, 5, 44, 48, 130, 5,
              40, 48, 130, 4, 206, 160, 3, 2, 1, 2, 2, 16, 10, 38, 15, 203, 42,
              124, 237, 90, 250, 175, 31, 24, 85, 198, 158, 164, 48, 10, 6, 8,
              42, 134, 72, 206, 61, 4, 3, 2, 48, 74, 49, 11, 48, 9, 6, 3, 85, 4,
              6, 19, 2, 85, 83, 49, 25, 48, 23, 6, 3, 85, 4, 10, 19, 16, 67,
              108, 111, 117, 100, 102, 108, 97, 114, 101, 44, 32, 73, 110, 99,
              46, 49, 32, 48, 30, 6, 3, 85, 4, 3, 19, 23, 67, 108, 111, 117,
              100, 102, 108, 97, 114, 101, 32, 73, 110, 99, 32, 69, 67, 67, 32,
              67, 65, 45, 51, 48, 30, 23, 13, 50, 51, 48, 51, 50, 56, 48, 48,
              48, 48, 48, 48, 90, 23, 13, 50, 52, 48, 51, 50, 54, 50, 51, 53,
              57, 53, 57, 90, 48, 117, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 85,
              83, 49, 19, 48, 17, 6, 3, 85, 4, 8, 19, 10, 67, 97, 108, 105, 102,
              111, 114, 110, 105, 97, 49, 22, 48, 20, 6, 3, 85, 4, 7, 19, 13,
              83, 97, 110, 32, 70, 114, 97, 110, 99, 105, 115, 99, 111, 49, 25,
              48, 23, 6, 3, 85, 4, 10, 19, 16, 67, 108, 111, 117, 100, 102, 108,
              97, 114, 101, 44, 32, 73, 110, 99, 46, 49, 30, 48, 28, 6, 3, 85,
              4, 3, 19, 21, 115, 110, 105, 46, 99, 108, 111, 117, 100, 102, 108,
              97, 114, 101, 115, 115, 108, 46, 99, 111, 109, 48, 89, 48, 19, 6,
              7, 42, 134, 72, 206, 61, 2, 1, 6, 8, 42, 134, 72, 206, 61, 3, 1,
              7, 3, 66, 0, 4, 102, 174, 57, 0, 85, 17, 28, 197, 153, 26, 213,
              107, 122, 227, 78, 185, 80, 149, 59, 220, 242, 230, 174, 253, 17,
              202, 55, 239, 209, 155, 173, 66, 157, 1, 12, 243, 118, 210, 134,
              86, 159, 40, 32, 86, 5, 15, 237, 246, 169, 42, 71, 41, 198, 112,
              106, 86, 159, 215, 172, 84, 209, 206, 235, 126, 163, 130, 3, 105,
              48, 130, 3, 101, 48, 31, 6, 3, 85, 29, 35, 4, 24, 48, 22, 128, 20,
              165, 206, 55, 234, 235, 176, 117, 14, 148, 103, 136, 180, 69, 250,
              217, 36, 16, 135, 150, 31, 48, 29, 6, 3, 85, 29, 14, 4, 22, 4, 20,
              30, 78, 242, 84, 79, 189, 159, 58, 51, 41, 13, 145, 174, 80, 30,
              70, 178, 114, 147, 172, 48, 48, 6, 3, 85, 29, 17, 4, 41, 48, 39,
              130, 21, 115, 110, 105, 46, 99, 108, 111, 117, 100, 102, 108, 97,
              114, 101, 115, 115, 108, 46, 99, 111, 109, 130, 14, 97, 112, 105,
              46, 111, 112, 101, 110, 97, 105, 46, 99, 111, 109, 48, 14, 6, 3,
              85, 29, 15, 1, 1, 255, 4, 4, 3, 2, 7, 128, 48, 29, 6, 3, 85, 29,
              37, 4, 22, 48, 20, 6, 8, 43, 6, 1, 5, 5, 7, 3, 1, 6, 8, 43, 6, 1,
              5, 5, 7, 3, 2, 48, 123, 6, 3, 85, 29, 31, 4, 116, 48, 114, 48, 55,
              160, 53, 160, 51, 134, 49, 104, 116, 116, 112, 58, 47, 47, 99,
              114, 108, 51, 46, 100, 105, 103, 105, 99, 101, 114, 116, 46, 99,
              111, 109, 47, 67, 108, 111, 117, 100, 102, 108, 97, 114, 101, 73,
              110, 99, 69, 67, 67, 67, 65, 45, 51, 46, 99, 114, 108, 48, 55,
              160, 53, 160, 51, 134, 49, 104, 116, 116, 112, 58, 47, 47, 99,
              114, 108, 52, 46, 100, 105, 103, 105, 99, 101, 114, 116, 46, 99,
              111, 109, 47, 67, 108, 111, 117, 100, 102, 108, 97, 114, 101, 73,
              110, 99, 69, 67, 67, 67, 65, 45, 51, 46, 99, 114, 108, 48, 62, 6,
              3, 85, 29, 32, 4, 55, 48, 53, 48, 51, 6, 6, 103, 129, 12, 1, 2, 2,
              48, 41, 48, 39, 6, 8, 43, 6, 1, 5, 5, 7, 2, 1, 22, 27, 104, 116,
              116, 112, 58, 47, 47, 119, 119, 119, 46, 100, 105, 103, 105, 99,
              101, 114, 116, 46, 99, 111, 109, 47, 67, 80, 83, 48, 118, 6, 8,
              43, 6, 1, 5, 5, 7, 1, 1, 4, 106, 48, 104, 48, 36, 6, 8, 43, 6, 1,
              5, 5, 7, 48, 1, 134, 24, 104, 116, 116, 112, 58, 47, 47, 111, 99,
              115, 112, 46, 100, 105, 103, 105, 99, 101, 114, 116, 46, 99, 111,
              109, 48, 64, 6, 8, 43, 6, 1, 5, 5, 7, 48, 2, 134, 52, 104, 116,
              116, 112, 58, 47, 47, 99, 97, 99, 101, 114, 116, 115, 46, 100,
              105, 103, 105, 99, 101, 114, 116, 46, 99, 111, 109, 47, 67, 108,
              111, 117, 100, 102, 108, 97, 114, 101, 73, 110, 99, 69, 67, 67,
              67, 65, 45, 51, 46, 99, 114, 116, 48, 12, 6, 3, 85, 29, 19, 1, 1,
              255, 4, 2, 48, 0, 48, 130, 1, 125, 6, 10, 43, 6, 1, 4, 1, 214,
              121, 2, 4, 2, 4, 130, 1, 109, 4, 130, 1, 105, 1, 103, 0, 118, 0,
              238, 205, 208, 100, 213, 219, 26, 206, 197, 92, 183, 157, 180,
              205, 19, 162, 50, 135, 70, 124, 188, 236, 222, 195, 81, 72, 89,
              70, 113, 31, 181, 155, 0, 0, 1, 135, 42, 138, 110, 128, 0, 0, 4,
              3, 0, 71, 48, 69, 2, 33, 0, 151, 235, 54, 127, 150, 42, 116, 144,
              125, 108, 141, 163, 44, 119, 144, 211, 13, 174, 229, 71, 173, 3,
              214, 197, 156, 57, 22, 205, 18, 150, 51, 211, 2, 32, 22, 29, 89,
              97, 242, 114, 173, 38, 119, 33, 28, 51, 229, 229, 232, 5, 26, 12,
              228, 114, 94, 97, 165, 91, 164, 15, 106, 230, 0, 73, 223, 96, 0,
              117, 0, 115, 217, 158, 137, 27, 76, 150, 120, 160, 32, 125, 71,
              157, 230, 178, 198, 28, 208, 81, 94, 113, 25, 42, 140, 107, 128,
              16, 122, 193, 119, 114, 181, 0, 0, 1, 135, 42, 138, 110, 157, 0,
              0, 4, 3, 0, 70, 48, 68, 2, 32, 80, 218, 239, 38, 188, 5, 113, 51,
              189, 53, 157, 223, 187, 43, 192, 90, 11, 51, 42, 114, 233, 109,
              152, 159, 192, 167, 216, 77, 228, 225, 230, 241, 2, 32, 65, 79,
              91, 185, 217, 48, 29, 232, 148, 251, 211, 56, 147, 25, 98, 51, 41,
              163, 167, 249, 79, 78, 253, 169, 185, 105, 165, 230, 64, 44, 224,
              24, 0, 118, 0, 72, 176, 227, 107, 218, 166, 71, 52, 15, 229, 106,
              2, 250, 157, 48, 235, 28, 82, 1, 203, 86, 221, 44, 129, 217, 187,
              191, 171, 57, 216, 132, 115, 0, 0, 1, 135, 42, 138, 110, 99, 0, 0,
              4, 3, 0, 71, 48, 69, 2, 32, 78, 68, 144, 144, 89, 45, 218, 0, 204,
              90, 251, 50, 6, 174, 237, 67, 123, 46, 6, 124, 16, 80, 148, 48,
              190, 219, 144, 94, 158, 115, 47, 99, 2, 33, 0, 163, 158, 201, 182,
              4, 66, 156, 173, 46, 196, 142, 228, 213, 155, 30, 52, 179, 152,
              227, 251, 2, 203, 39, 251, 146, 27, 177, 46, 89, 139, 28, 130, 48,
              10, 6, 8, 42, 134, 72, 206, 61, 4, 3, 2, 3, 72, 0, 48, 69, 2, 33,
              0, 218, 206, 230, 157, 15, 150, 107, 40, 225, 14, 189, 110, 44,
              83, 72, 152, 203, 84, 226, 87, 151, 93, 3, 139, 132, 42, 139, 225,
              196, 215, 73, 243, 2, 32, 53, 226, 195, 202, 102, 17, 13, 142,
              188, 46, 199, 52, 88, 62, 17, 77, 145, 148, 16, 175, 35, 9, 108,
              47, 249, 165, 71, 88, 112, 237, 53, 58, 164, 2, 4, 0, 166, 16, 4,
              14, 97, 112, 105, 46, 111, 112, 101, 110, 97, 105, 46, 99, 111,
              109, 169, 5, 2, 3, 0, 253, 32, 170, 129, 195, 4, 129, 192, 6, 118,
              203, 167, 33, 54, 9, 249, 117, 30, 166, 151, 61, 205, 107, 118,
              66, 72, 194, 231, 42, 90, 251, 55, 58, 151, 120, 103, 78, 180, 25,
              18, 58, 26, 153, 130, 187, 242, 29, 26, 4, 94, 88, 244, 53, 38,
              212, 216, 244, 183, 65, 68, 130, 228, 69, 33, 212, 6, 90, 232,
              107, 255, 163, 33, 178, 5, 35, 28, 225, 27, 115, 69, 108, 158,
              139, 49, 243, 182, 255, 202, 69, 32, 161, 238, 39, 203, 26, 64,
              242, 168, 209, 129, 26, 116, 17, 12, 85, 179, 1, 145, 207, 137,
              118, 30, 214, 224, 61, 174, 117, 45, 128, 188, 7, 135, 86, 47,
              180, 67, 27, 1, 26, 212, 147, 188, 22, 168, 60, 17, 78, 154, 52,
              112, 230, 106, 104, 74, 94, 70, 123, 22, 193, 12, 157, 254, 63,
              46, 88, 115, 137, 58, 76, 226, 124, 26, 170, 101, 221, 142, 98,
              248, 171, 96, 217, 63, 82, 232, 39, 51, 40, 204, 29, 120, 206,
              254, 75, 231, 161, 161, 28, 129, 88, 141, 75, 3, 64, 145, 87, 160,
              39, 216, 221, 154, 174, 6, 2, 4, 95, 248, 61, 234, 179, 3, 2, 1,
              29
            ]
          }
        },
        "list": ["api.openai.com:443:::::::::::::::::::::"]
      }
    },
    "method": "POST",
    "path": "/v1/chat/completions",
    "_ended": true,
    "res": {
      "_readableState": {
        "objectMode": false,
        "highWaterMark": 16384,
        "buffer": {
          "head": null,
          "tail": null,
          "length": 0
        },
        "length": 0,
        "pipes": [],
        "flowing": true,
        "ended": true,
        "endEmitted": true,
        "reading": false,
        "constructed": true,
        "sync": false,
        "needReadable": false,
        "emittedReadable": false,
        "readableListening": false,
        "resumeScheduled": false,
        "errorEmitted": false,
        "emitClose": true,
        "autoDestroy": true,
        "destroyed": true,
        "errored": null,
        "closed": true,
        "closeEmitted": true,
        "defaultEncoding": "utf8",
        "awaitDrainWriters": null,
        "multiAwaitDrain": false,
        "readingMore": false,
        "dataEmitted": true,
        "decoder": null,
        "encoding": null
      },
      "_events": {
        "end": [null, null]
      },
      "_eventsCount": 4,
      "socket": null,
      "httpVersionMajor": 1,
      "httpVersionMinor": 1,
      "httpVersion": "1.1",
      "complete": true,
      "rawHeaders": [
        "Date",
        "Thu, 10 Aug 2023 15:35:11 GMT",
        "Content-Type",
        "application/json",
        "Transfer-Encoding",
        "chunked",
        "Connection",
        "keep-alive",
        "access-control-allow-origin",
        "*",
        "Cache-Control",
        "no-cache, must-revalidate",
        "openai-model",
        "gpt-3.5-turbo-0613",
        "openai-organization",
        "user-iv8x2pye6cmrc8cynfmldawm",
        "openai-processing-ms",
        "69740",
        "openai-version",
        "2020-10-01",
        "strict-transport-security",
        "max-age=15724800; includeSubDomains",
        "x-ratelimit-limit-requests",
        "3500",
        "x-ratelimit-limit-tokens",
        "90000",
        "x-ratelimit-remaining-requests",
        "3499",
        "x-ratelimit-remaining-tokens",
        "86232",
        "x-ratelimit-reset-requests",
        "17ms",
        "x-ratelimit-reset-tokens",
        "2.512s",
        "x-request-id",
        "ec5b20c1d03c3c65316fc67a48d1ca27",
        "CF-Cache-Status",
        "DYNAMIC",
        "Server",
        "cloudflare",
        "CF-RAY",
        "7f494cf33cbd006d-CDG",
        "alt-svc",
        "h3=\":443\"; ma=86400"
      ],
      "rawTrailers": [],
      "aborted": false,
      "upgrade": false,
      "url": "",
      "method": null,
      "statusCode": 200,
      "statusMessage": "OK",
      "_consuming": true,
      "_dumped": false,
      "responseUrl": "https://api.openai.com/v1/chat/completions",
      "redirects": []
    },
    "aborted": false,
    "timeoutCb": null,
    "upgradeOrConnect": false,
    "parser": null,
    "maxHeadersCount": null,
    "reusedSocket": false,
    "host": "api.openai.com",
    "protocol": "https:",
    "_redirectable": {
      "_writableState": {
        "objectMode": false,
        "highWaterMark": 16384,
        "finalCalled": false,
        "needDrain": false,
        "ending": false,
        "ended": false,
        "finished": false,
        "destroyed": false,
        "decodeStrings": true,
        "defaultEncoding": "utf8",
        "length": 0,
        "writing": false,
        "corked": 0,
        "sync": true,
        "bufferProcessing": false,
        "writecb": null,
        "writelen": 0,
        "afterWriteTickInfo": null,
        "buffered": [],
        "bufferedIndex": 0,
        "allBuffers": true,
        "allNoop": true,
        "pendingcb": 0,
        "constructed": true,
        "prefinished": false,
        "errorEmitted": false,
        "emitClose": true,
        "autoDestroy": true,
        "errored": null,
        "closed": false,
        "closeEmitted": false
      },
      "_events": {},
      "_eventsCount": 3,
      "_options": {
        "maxRedirects": 21,
        "maxBodyLength": 10485760,
        "protocol": "https:",
        "path": "/v1/chat/completions",
        "method": "POST",
        "agents": {},
        "hostname": "api.openai.com",
        "port": null,
        "nativeProtocols": {
          "http:": {
            "METHODS": [
              "ACL",
              "BIND",
              "CHECKOUT",
              "CONNECT",
              "COPY",
              "DELETE",
              "GET",
              "HEAD",
              "LINK",
              "LOCK",
              "M-SEARCH",
              "MERGE",
              "MKACTIVITY",
              "MKCALENDAR",
              "MKCOL",
              "MOVE",
              "NOTIFY",
              "OPTIONS",
              "PATCH",
              "POST",
              "PROPFIND",
              "PROPPATCH",
              "PURGE",
              "PUT",
              "REBIND",
              "REPORT",
              "SEARCH",
              "SOURCE",
              "SUBSCRIBE",
              "TRACE",
              "UNBIND",
              "UNLINK",
              "UNLOCK",
              "UNSUBSCRIBE"
            ],
            "STATUS_CODES": {
              "100": "Continue",
              "101": "Switching Protocols",
              "102": "Processing",
              "103": "Early Hints",
              "200": "OK",
              "201": "Created",
              "202": "Accepted",
              "203": "Non-Authoritative Information",
              "204": "No Content",
              "205": "Reset Content",
              "206": "Partial Content",
              "207": "Multi-Status",
              "208": "Already Reported",
              "226": "IM Used",
              "300": "Multiple Choices",
              "301": "Moved Permanently",
              "302": "Found",
              "303": "See Other",
              "304": "Not Modified",
              "305": "Use Proxy",
              "307": "Temporary Redirect",
              "308": "Permanent Redirect",
              "400": "Bad Request",
              "401": "Unauthorized",
              "402": "Payment Required",
              "403": "Forbidden",
              "404": "Not Found",
              "405": "Method Not Allowed",
              "406": "Not Acceptable",
              "407": "Proxy Authentication Required",
              "408": "Request Timeout",
              "409": "Conflict",
              "410": "Gone",
              "411": "Length Required",
              "412": "Precondition Failed",
              "413": "Payload Too Large",
              "414": "URI Too Long",
              "415": "Unsupported Media Type",
              "416": "Range Not Satisfiable",
              "417": "Expectation Failed",
              "418": "I'm a Teapot",
              "421": "Misdirected Request",
              "422": "Unprocessable Entity",
              "423": "Locked",
              "424": "Failed Dependency",
              "425": "Too Early",
              "426": "Upgrade Required",
              "428": "Precondition Required",
              "429": "Too Many Requests",
              "431": "Request Header Fields Too Large",
              "451": "Unavailable For Legal Reasons",
              "500": "Internal Server Error",
              "501": "Not Implemented",
              "502": "Bad Gateway",
              "503": "Service Unavailable",
              "504": "Gateway Timeout",
              "505": "HTTP Version Not Supported",
              "506": "Variant Also Negotiates",
              "507": "Insufficient Storage",
              "508": "Loop Detected",
              "509": "Bandwidth Limit Exceeded",
              "510": "Not Extended",
              "511": "Network Authentication Required"
            },
            "maxHeaderSize": 16384,
            "globalAgent": {
              "_events": {},
              "_eventsCount": 2,
              "defaultPort": 80,
              "protocol": "http:",
              "options": {
                "keepAlive": true,
                "scheduling": "lifo",
                "timeout": 5000,
                "noDelay": true,
                "path": null
              },
              "requests": {},
              "sockets": {},
              "freeSockets": {},
              "keepAliveMsecs": 1000,
              "keepAlive": true,
              "maxSockets": null,
              "maxFreeSockets": 256,
              "scheduling": "lifo",
              "maxTotalSockets": null,
              "totalSocketCount": 0
            }
          },
          "https:": {}
        },
        "pathname": "/v1/chat/completions"
      },
      "_ended": true,
      "_ending": true,
      "_redirectCount": 0,
      "_requestBodyLength": 6388,
      "_requestBodyBuffers": [],
      "_currentUrl": "https://api.openai.com/v1/chat/completions"
    }
  },
  "data": {
    "id": "chatcmpl-7m1xh3Ha4V1av2ADeKlIlaQUSQOzo",
    "object": "chat.completion",
    "created": 1691681641,
    "model": "gpt-3.5-turbo-0613",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "content": "[\n  {\n    \"moment\": \"Felt so bad when running after eating spinach\",\n    \"needs_importance\": {\n      \"Food 🥦\": 0.5,\n      \"Physical Movement 🤸\": 0.3\n    }\n  },\n  {\n    \"moment\": \"Feeling excited when calling mum\",\n    \"needs_importance\": {\n      \"Social Connection 🤝\": 0.7,\n      \"Belongingness & Community 🏘️\": 0.3,\n      \"Interpersonal Communication 📢\": 0.6,\n      \"Emotional Safety 🤗\": 0.4,\n      \"Affection, Love & Intimacy ❤️\": 0.2\n    }\n  },\n  {\n    \"moment\": \"Feeling both empty and full after movement class\",\n    \"needs_importance\": {\n      \"Physical Movement 🤸\": 0.5,\n      \"Comfort 🛋️\": 0.2,\n      \"Rest & Relaxation 🧘\": 0.2,\n      \"Physical touch 👐\": 0.3,\n      \"Social Connection 🤝\": 0.2,\n      \"Belongingness & Community 🏘️\": 0.2,\n      \"Interpersonal Communication 📢\": 0.2,\n      \"Emotional Safety 🤗\": 0.2,\n      \"Self-Esteem & Confidence 💪\": 0.2,\n      \"Efficiency ⚡\": 0.2,\n      \"Personal Achievement 🥇\": 0.2,\n      \"Personal Autonomy 🛤️\": 0.2,\n      \"Personal Expression 🗣️\": 0.2,\n      \"Creativity 🎨\": 0.2,\n      \"Exploration 🌎\": 0.2,\n      \"Challenge 🧗\": 0.2,\n      \"Play ⚽\": 0.2,\n      \"Self-Actualization 🌱\": 0.2\n    }\n  },\n  {\n    \"moment\": \"Feeling so stressed out today when waking up\",\n    \"needs_importance\": {\n      \"Rest & Relaxation 🧘\": 0.3,\n      \"Emotional Safety 🤗\": 0.4,\n      \"Self-Esteem & Confidence 💪\": 0.2,\n      \"Efficiency ⚡\": 0.3,\n      \"Personal Achievement 🥇\": 0.2,\n      \"Personal Autonomy 🛤️\": 0.2,\n      \"Personal Privacy 🌐\": 0.2,\n      \"Personal Expression 🗣️\": 0.2,\n      \"Creativity 🎨\": 0.2,\n      \"Exploration 🌎\": 0.2,\n      \"Challenge 🧗\": 0.2,\n      \"Novelty 🌀\": 0.2,\n      \"Humor 😂\": 0.2,\n      \"Play ⚽\": 0.2,\n      \"Inspiration💡\": 0.2,\n      \"Self-Actualization 🌱\": 0.2\n    }\n  },\n  {\n    \"moment\": \"Feeling grateful toward life when eating my fresh tomatoes\",\n    \"needs_importance\": {\n      \"Food 🥦\": 0.5,\n      \"Contact with nature 🏞️\": 0.3,\n      \"Social Connection 🤝\": 0.2,\n      \"Belongingness & Community 🏘️\": 0.2,\n      \"Empathy, Understanding & Validation 🫂\": 0.2,\n      \"Affection, Love & Intimacy ❤️\": 0.2,\n      \"Interpersonal Communication 📢\": 0.2,\n      \"Emotional Safety 🤗\": 0.2,\n      \"Self-Esteem & Confidence 💪\": 0.2,\n      \"Social Recognition 👏\": 0.2,\n      \"Competence 🎓\": 0.2,\n      \"Efficiency ⚡\": 0.2,\n      \"Personal Achievement 🥇\": 0.2,\n      \"Striving for Perfection 💎\": 0.2,\n      \"Personal Autonomy 🛤️\": 0.2,\n      \"Personal Privacy 🌐\": 0.2,\n      \"Societal Contribution 🔨\": 0.2,\n      \"Personal Expression 🗣️\": 0.2,\n      \"Creativity 🎨\": 0.2,\n      \"Exploration 🌎\": 0.2,\n      \"Challenge 🧗\": 0.2,\n      \"Novelty 🌀\": 0.2,\n      \"Entertainment 🎠\": 0.2,\n      \"Humor 😂\": 0.2,\n      \"Play ⚽\": 0.2,\n      \"Inspiration💡\": 0.2,\n      \"Self-Actualization 🌱\": 0.2,\n      \"Learning 📚\": 0.2,\n      \"Moral Integrity 💯\": 0.2,\n      \"Social Justice ⚖️\": 0.2,\n      \"Life's Meaning 🌌\": 0.2,\n      \"Purposeful Living 🎯\": 0.2,\n      \"Inner Peace 🕊️\": 0.2,\n      \"Spirituality 🙏\": 0.2,\n      \"Sense of Wonder & Wholeness 🌈\": 0.2,\n      \"Order & Structure 📐\": 0.2,\n      \"Altruism ❤️‍🩹\": 0.2,\n      \"Joyful Celebration 🎉\": 0.2,\n      \"Grieving & Mourning ⚫️\": 0.2\n    }\n  },\n  {\n    \"moment\": \"Feeling a little down today after calling mum\",\n    \"needs_importance\": {\n      \"Social Connection 🤝\": 0.7,\n      \"Belongingness & Community 🏘️\": 0.3,\n      \"Interpersonal Communication 📢\": 0.6,\n      \"Emotional Safety 🤗\": 0.4,\n      \"Affection, Love & Intimacy ❤️\": 0.2\n    }\n  },\n  {\n    \"moment\": \"Feeling proud of myself for working out today!\",\n    \"needs_importance\": {\n      \"Physical Movement 🤸\": 0.5,\n      \"Self-Esteem & Confidence 💪\": 0.7,\n      \"Personal Achievement 🥇\": 0.6,\n      \"Striving for Perfection 💎\": 0.3,\n      \"Personal Autonomy 🛤️\": 0.4,\n      \"Personal Expression 🗣️\": 0.3,\n      \"Creativity 🎨\": 0.2,\n      \"Exploration 🌎\": 0.2,\n      \"Challenge 🧗\": 0.2,\n      \"Novelty 🌀\": 0.2,\n      \"Play ⚽\": 0.2,\n      \"Inspiration💡\": 0.2,\n      \"Self-Actualization 🌱\": 0.2\n    }\n  },\n  {\n    \"moment\": \"Feeling moody because of the grey weather\",\n    \"needs_importance\": {\n      \"Comfort 🛋️\": 0.3,\n      \"Rest & Relaxation 🧘\": 0.2,\n      \"Physical touch 👐\": 0.2,\n      \"Contact with nature 🏞️\": 0.3,\n      \"Social Connection 🤝\": 0.2,\n      \"Belongingness & Community 🏘️\": 0.2,\n      \"Empathy, Understanding & Validation 🫂\": 0.2,\n      \"Affection, Love & Intimacy ❤️\": 0.2,\n      \"Interpersonal Communication 📢\": 0.2,\n      \"Emotional Safety 🤗\": 0.2,\n      \"Self-Esteem & Confidence 💪\": 0.2,\n      \"Social Recognition 👏\": 0.2,\n      \"Competence 🎓\": 0.2,\n      \"Efficiency ⚡\": 0.2,\n      \"Personal Achievement 🥇\": 0.2,\n      \"Striving for Perfection 💎\": 0.2,\n      \"Personal Autonomy 🛤️\": 0.2,\n      \"Personal Privacy 🌐\": 0.2,\n      \"Societal Contribution 🔨\": 0.2,\n      \"Personal Expression 🗣️\": 0.2,\n      \"Creativity 🎨\": 0.2,\n      \"Exploration 🌎\": 0.2,\n      \"Challenge 🧗\": 0.2,\n      \"Novelty 🌀\": 0.2,\n      \"Entertainment 🎠\": 0.2,\n      \"Humor 😂\": 0.2,\n      \"Play ⚽\": 0.2,\n      \"Inspiration💡\": 0.2,\n      \"Self-Actualization 🌱\": 0.2,\n      \"Learning 📚\": 0.2,\n      \"Moral Integrity 💯\": 0.2,\n      \"Social Justice ⚖️\": 0.2,\n      \"Life's Meaning 🌌\": 0.2,\n      \"Purposeful Living 🎯\": 0.2,\n      \"Inner Peace 🕊️\": 0.2,\n      \"Spirituality 🙏\": 0.2,\n      \"Sense of Wonder & Wholeness 🌈\": 0.2,\n      \"Order & Structure 📐\": 0.2,\n      \"Altruism ❤️‍🩹\": 0.2,\n      \"Joyful Celebration 🎉\": 0.2,\n      \"Grieving & Mourning ⚫️\": 0.2\n    }\n  },\n  {\n    \"moment\": \"Sex with mona, good connection and sharing\",\n    \"needs_importance\": {\n      \"Sexual Expression ❤️‍🔥\": 0.8,\n      \"Contact with nature 🏞️\": 0.2,\n      \"Social Connection 🤝\": 0.6,\n      \"Belongingness & Community 🏘️\": 0.2,\n      \"Empathy, Understanding & Validation 🫂\": 0.4,\n      \"Affection, Love & Intimacy ❤️\": 0.9,\n      \"Interpersonal Communication 📢\": 0.7,\n"
        },
        "finish_reason": "length"
      }
    ],
    "usage": {
      "prompt_tokens": 1578,
      "completion_tokens": 2304,
      "total_tokens": 3882
    }
  }
}
